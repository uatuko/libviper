name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup lcov
        run: |
          version="1.16"
          mkdir /tmp/lcov-src && cd $_
          curl -Ls https://github.com/linux-test-project/lcov/releases/download/v1.16/lcov-${version}.tar.gz | tar -xz
          cd lcov-${version}
          sudo make install
      - name: Configure CMake
        run: cmake -B .build -DENABLE_COVERAGE=ON
      - name: Build
        run: cmake --build .build
      - name: Test
        working-directory: ${{ github.workspace }}/.build
        run: ctest
      - name: Generate code coverage reports
        working-directory: ${{ github.workspace }}/.build
        run: |
          lcov --capture --directory lib --output-file coverage.out
          lcov --extract coverage.out "${{ github.workspace }}/lib/*" --output-file coverage.out
          lcov --list coverage.out
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ${{ github.workspace }}/.build
          fail_ci_if_error: true
          files: coverage.out
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build on ${{ matrix.os }} using ${{ matrix.compiler }}
    strategy:
      matrix:
        compiler:
          - g++
          - clang++
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Configure CMake
        run: cmake -B .build -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build .build --config Release
      - name: Test
        working-directory: ${{ github.workspace }}/.build
        run: ctest -C Release
